{"version":3,"sources":["res/strings.ts","res/socialLinks.ts","res/bioInfo.ts","res/pinnedProjects.ts","res/currentSkills.ts","res/urls.ts","components/Header/ContactForm/ContactForm.tsx","components/Header/Header.tsx","components/Card/Card.tsx","components/ListCard/ListCard.tsx","components/Bio/Bio.tsx","components/IconButton/IconButton.tsx","components/Projects/ProjectCard/ProjectCard.tsx","components/Projects/Projects.tsx","components/Skills/Skills.tsx","components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["strings","name","description","bioTitle","projectsTitle","skillsTitle","location","footer","contactFormTitle","contactFormPlaceholder","contactFormEmailInvalid","contactFormMessageInvalid","externalLinks","bioInfo","pinnedProjects","currentSkills","urls","profile","repos","colors","repoPrefix","ContactForm","open","setOpen","useState","email","setEmail","message","setMessage","emailInvalid","setEmailInvalid","messageInvalid","setMessageInvalid","submitDisabled","setSubmitDisabled","validateEmail","invalid","match","validateMessage","length","Root","show","as","Fragment","className","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","type","placeholder","value","onChange","e","target","onBlur","rows","onClick","valid","disabled","Header","props","contactFormOpen","setContactFormOpen","avatar","src","alt","socialLinks","map","link","index","key","Object","keys","href","Card","large","icon","title","caption","children","ListCard","list","item","Bio","IconButton","role","size","ProjectCard","project","languageColor","stats","forks_count","stargazers_count","style","backgroundColor","window","matchMedia","matches","language","fork","parent","full_name","html_url","Projects","filteredProjects","setFilteredProjects","visibleProject","setVisibleProject","undefined","languageColors","setLanguageColors","isLarge","useMediaQuery","query","getProjectParent","useCallback","fetch","then","response","json","data","p","id","useEffect","projects","filter","includes","switchProjects","projectIndex","getLanguageColor","color","Skills","Footer","App","setProfile","setRepos","catch","err","console","error","private","avatar_url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f573da09.chunk.js","sourcesContent":["const strings = {\n  name: 'Scott Blechman',\n  description: 'SWE @ Tyler Technologies.',\n  bioTitle: 'About Me',\n  projectsTitle: 'My Projects',\n  skillsTitle: 'What I\\'m Using',\n  location: 'Dallas, TX',\n  footer: '\\u00a92021 Scott Blechman',\n  contactFormTitle: 'Get In Touch',\n  contactFormPlaceholder: 'Message',\n  contactFormEmailInvalid: 'Please enter a valid email.',\n  contactFormMessageInvalid: 'Don\\'t forget the message!',\n\n};\n\nexport default strings;\n","const externalLinks: Record<string, string>[] = [\n  {'logo-github': 'https://github.com/scottblechman'},\n  {'logo-linkedin': 'https://www.linkedin.com/in/scott-blechman/'}\n];\n\nexport default externalLinks;\n","import strings from './strings';\n\nconst bioInfo: Record<string, string>[] = [\n  {'location-outline': strings.location},\n];\n\nexport default bioInfo;\n","const pinnedProjects = [\n  'app',\n  'parsec',\n  'Otter',\n  'mindful'\n];\n\nexport default pinnedProjects;","const currentSkills: Record<string, string>[] = [\n  {'logo-javascript': 'Javascript/Typescript'},\n  {'logo-react': 'React'},\n  {'logo-electron': 'Electron'},\n  {'logo-firebase': 'Firebase'},\n  {'logo-amazon': 'AWS'},\n  {'logo-docker': 'Docker'},\n];\n\nexport default currentSkills;\n","const urls = {\n  profile: 'https://api.github.com/users/scottblechman',\n  repos: 'https://api.github.com/users/scottblechman/repos',\n  colors: 'https://raw.githubusercontent.com/ozh/github-colors/master/colors.json', // Regularly scrapes github language definition YML\n  repoPrefix: 'https://api.github.com/repos/scottblechman/',  // Followed by a repo name\n};\n\nexport default urls;\n","import { Dialog, Transition } from '@headlessui/react';\nimport { Fragment, useState } from 'react';\nimport { strings } from '../../../res';\n\ntype ContactFormProps = {\n  open: boolean,\n  setOpen: (arg0: boolean) => void,\n};\n\n/**\n * Collects and sends an email message.\n * Modal skeleton from https://tailwindui.com/components/application-ui/overlays/modals.\n */\nfunction ContactForm({open, setOpen}: ContactFormProps) {\n\n  const [email, setEmail] = useState<string>(''); \n  const [message, setMessage] = useState<string>('');\n\n  const [emailInvalid, setEmailInvalid] = useState(false);\n  const [messageInvalid, setMessageInvalid] = useState(false);\n  const [submitDisabled, setSubmitDisabled] = useState(false);\n\n  const validateEmail = () => {\n\n    // Matches most of RFC 2822. Does not validate existence of email address (see https://www.regular-expressions.info/email.html).\n    const invalid = email.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g) === null;\n    setEmailInvalid(invalid);\n    return !invalid;\n  };\n\n  const validateMessage = () => {\n    const invalid = (message?.length ?? 0) <= 0;\n    setMessageInvalid(invalid);\n    return !invalid;\n  };\n\n  const onSubmit = () => {\n    const valid = validateEmail() && validateMessage();\n    setSubmitDisabled(!valid);\n    if(valid) {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={setOpen}>\n        <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-400 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div className=\"inline-block align-bottom bg-gray-100 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n              <div className=\"bg-gray-100 dark:bg-gray-600 px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                <div className=\"sm:flex sm:items-center sm:justify-center\">\n                  <div className=\"mt-3 sm:mt-0 sm:ml-4 text-center\">\n                    <Dialog.Title as=\"h3\" className=\"text-2xl leading-6 font-medium text-gray-900 dark:text-gray-50 text-opacity-95 mb-4\">\n                      {strings.contactFormTitle}\n                    </Dialog.Title>\n                    <div className=\"px-16\">\n                      <input \n                        type=\"email\"\n                        className=\"mt-1 block w-full rounded-md bg-gray-200 border-transparent focus:border-gray-300\n                        focus:bg-gray-200 focus:ring-0 placeholder-gray-500 placeholder-opacity-50 text-gray-800\n                        dark:bg-gray-700 dark:focus:bg-gray-700 dark:focus:border-gray-800 dark:placeholder-gray-100\n                        dark:placeholder-opacity-75 dark:text-gray-50 text-opacity-95\"\n                        placeholder=\"Enter your email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        onBlur={validateEmail}\n                      />\n                      <p className=\"text-red-600 dark:text-gray-300 text-opacity-95 text-sm font-medium -ml-4\">{emailInvalid ? strings.contactFormEmailInvalid : ''}</p>\n                      <textarea \n                        className=\"mt-4 mb-1 block w-full rounded-md bg-gray-200 border-transparent focus:border-gray-300\n                        focus:bg-gray-200 focus:ring-0 placeholder-gray-500 placeholder-opacity-50 text-gray-800\n                        dark:bg-gray-700 dark:focus:bg-gray-700 dark:focus:border-gray-800 dark:placeholder-gray-100\n                        dark:placeholder-opacity-75 dark:text-gray-50 text-opacity-95\" \n                        rows={5}\n                        placeholder={strings.contactFormPlaceholder}\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        onBlur={validateMessage}\n                      />\n                      <p className=\"text-red-600 dark:text-gray-300 text-opacity-95 text-sm font-medium mb-4 -ml-4\">{messageInvalid ? strings.contactFormMessageInvalid : ''}</p>\n                    </div>\n                    <button\n                      type=\"button\"\n                      className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4\n                      py-2 bg-green-500 text-base font-medium text-gray-100 hover:bg-green-600 focus:outline-none \n                      focus:ring-2 focus:ring-offset-2 focus:ring-green-400 sm:ml-3 sm:w-auto sm:text-sm dark:bg-gray-700\n                      dark:hover:bg-gray-800 dark:focus:ring-gray-600\"\n                      onClick={onSubmit}\n                      disabled={submitDisabled}\n                    >Send</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n\nexport default ContactForm;","import { useState } from 'react';\nimport { strings, socialLinks } from '../../res';\nimport ContactForm from './ContactForm/ContactForm';\n\ntype HeaderProps = {\n  avatar: string | undefined;\n};\n\nfunction Header(props: HeaderProps) {\n  const [contactFormOpen, setContactFormOpen] = useState(false);\n\n  return (\n    <div>\n      <div className=\"bg-green-500 dark:bg-gray-600 h-32\">\n        <div className=\"flex flex-col lg:flex-row items-center lg:justify-start pt-16 lg:pt-4 mx-4 lg:ml-32\">\n          {props.avatar\n            ? <div className=\"relative z-10 w-40 lg:w-64 h-40 lg:h-64 mb-1 lg:mb-4\">\n              <img src={props.avatar} alt=\"GitHub avatar\" className=\"rounded-full border-6 lg:border-8 border-gray-100 dark:border-gray-600\" />\n            </div>\n            : <div className=\"relative z-10 w-40 lg:w-64 h-40 lg:h-64 mb-1 lg:mb-4 bg-gray-100 dark:bg-gray-600 rounded-full\">\n              <div className=\"w-40 lg:w-64 h-40 lg:h-64 mb-1 lg:mb-4 bg-gray-200 rounded-full border-6 lg:border-8 border-gray-50 dark:border-gray-600 animate-pulse\"></div>\n            </div>\n          }\n          <div className=\"relative z-0 lg:max-w-lg bg-gray-100 dark:bg-gray-700 lg:dark:bg-gray-600 lg:-ml-8 lg:px-10 rounded-r-md lg:-mt-4 lg:pt-4\">\n            <p className=\"text-center lg:text-left text-2xl lg:text-4xl font-semibold tracking-normal text-gray-900 dark:text-gray-100 dark:text-opacity-95\">{strings.name}</p>\n            <p className=\"text-center lg:text-left lg:text-xl my-2 lg:mb-4 text-gray-700 lg:ml-2 dark:text-gray-100 dark:text-opacity-90\">{strings.description}</p>\n            <hr />\n            <div className=\"flex lg:ml-4 mt-3 justify-center lg:justify-start\">\n              {socialLinks.map((link, index) => {\n                const key: string = Object.keys(link)[0];\n                return (\n                  <a href={link[key]} key={index} className=\"mx-2.5 mt-0.5 lg:mt-1.5 text-xl dark:text-gray-100 dark:text-opacity-95\">\n                    <ion-icon name={key} />\n                  </a>\n                )\n              })}\n              {/* Removed until emailjs integration complete.\n              <button onClick={() => setContactFormOpen(true)}\n              className=\"ml-6 mb-1.5 bg-green-500 dark:bg-gray-800 lg:dark:bg-gray-700 text-white text-opacity-95 text-sm\n              lg:text-lg font-medium px-3 py-1 rounded-full transition delay-75 hover:bg-green-600 dark:hover:bg-gray-900 lg:dark:hover:bg-gray-800\">\n                Contact Me\n            </button>*/}\n            </div>\n          </div>\n        </div>\n      </div>\n      <ContactForm open={contactFormOpen} setOpen={setContactFormOpen} />\n    </div>\n  );\n}\n\nexport default Header;\n","type CardProps = {\n  title: string,\n  icon?: string,\n  caption?:string,\n  children?: any,\n  /** Displays the card twice as wide on large displays if true. */\n  large?: boolean,\n}\n\nfunction Card(props: CardProps) {\n  return (\n    <div className={`m-2 lg:mx-4 lg:my-8 ${props.large ? 'lg:col-span-2' : ''} p-2 bg-gray-100 dark:bg-gray-600 rounded-lg text-gray-700 dark:text-gray-50 dark:text-opacity-95`}>\n      <div className=\"flex ml-2\">\n        {props.icon &&\n          <div className=\"mr-2 lg:mr-4 text-2xl\">\n            <ion-icon name={props.icon} />\n          </div>\n        }\n        <h1 className=\"text-lg lg:text-xl font-medium tracking-normal\">{props.title}</h1>\n      </div>\n      <p className=\"text-sm text-gray-600 text-center my-1\">{props.caption}</p>\n      <div className=\"px-4 py-2\">\n        {props.children}\n      </div>\n    </div>\n  );\n }\n \n export default Card;\n ","import Card from '../Card/Card';\n\ntype ListCardProps = {\n  /** Title of the card. */\n  title: string,\n  /** Icon optionally displayed next to card title. */\n  icon?: string,\n  /** Content list. Each Record is a pair of form <icon, text>. */\n  list: Record<string, string>[],\n};\n\n/**\n * Displays a card with a list of icon/text pairs.\n */\nfunction ListCard({title, icon, list}: ListCardProps) {\n return (\n  <Card \n  title={title}\n  icon={icon}>\n    <div className=\"grid grid-cols-1 lg:grid-cols-2\">\n      {list.map((item, index) => {\n        const key: string = Object.keys(item)[0];\n        return (\n          <div key={index} className=\"flex my-1 py-1\">\n            <div className=\"lg:pt-0.5 mr-2 lg:mr-4 text-xl\">\n              <ion-icon name={key} />\n            </div>\n            <p className=\"text-gray-700 dark:text-gray-50 dark:text-opacity-95 font-medium lg:text-lg\">{item[key]}</p>\n          </div>\n        )\n      })}\n    </div>\n  </Card>\n );\n}\n\nexport default ListCard;\n","import { strings, bioInfo } from '../../res';\nimport ListCard from '../ListCard/ListCard';\n\nfunction Bio() {\n return (\n  <div>\n    <ListCard title={strings.bioTitle} icon=\"person-circle-outline\" list={bioInfo} />\n  </div>\n );\n}\n\nexport default Bio;\n","type IconButtonProps = {\n  name: string,\n  onClick: () => void\n  disabled?: boolean\n};\n\nfunction IconButton({name, onClick, disabled}: IconButtonProps) {\n  const handleClick = () => {\n    if(!disabled) {\n      onClick();\n    }\n  };\n\n  return (\n    <div onClick={handleClick} className={disabled ? \"text-gray-400\" : \"\"} role=\"button\">\n      <ion-icon name={name} size=\"large\" />\n    </div>\n  );\n}\n\nexport default IconButton;","import { Project } from '../../../types';\n\ntype ProjectCardProps = {\n  project: Project | undefined,\n  languageColor: string,\n};\n\nfunction ProjectCard({project, languageColor}: ProjectCardProps) {\n\n  const stats: Record<string, number | undefined>[] = [\n    {'eye-outline': project?.forks_count},\n    {'star-outline': project?.stargazers_count},\n    {'git-network-outline': project?.forks_count},\n  ];\n\n  return (\n    <div className={`bg-gray-300 dark:bg-gray-800 p-4 w-48 h-64 rounded-md relative ${!project ? 'animate-pulse' : ''}`}>\n      <div>\n        <div className=\"flex justify-between items-stretch\">\n          <div className=\"flex\">\n            <div className=\"mr-2 lg:mr-4\">\n              <ion-icon name=\"code-outline\" />\n            </div>\n            <p className={`${!project ? 'bg-gray-200 text-gray-200 rounded h-4' : 'text-lg font-medium -mt-1.5'}`}>{project?.name ?? '----------'}</p>\n          </div>\n          <p className=\"text-xs text-gray-100 dark:text-gray-50 dark:text-opacity-95 px-1 pt-0.5 mb-px rounded-full dark:bg-gray-700\" style={{\n            backgroundColor: window.matchMedia('(prefers-color-scheme: dark)')?.matches ? '' : languageColor\n          }}>{project?.language ?? ''}</p>\n        </div>\n        {project?.fork && project?.parent &&\n          <p className=\"text-xs text-gray-500 dark:text-gray-50 dark:text-opacity-95\">Forked from {project.parent?.full_name ?? ''}</p>\n        }\n        <div className=\"text-sm mt-4\">\n          {project?.description}\n          {project \n            ? <a href={project?.html_url} className=\"ml-2 underline text-green-600 dark:text-gray-400 dark:text-opacity-95\">(View on GitHub)</a>\n            : <p className=\"ml-2 bg-gray-200 text-gray-200 rounded\">________________</p>\n          }\n        </div>\n        <div className=\"flex absolute bottom-2 left-2 text-gray-500 text-xs\">\n          {stats.map((item, index) => {\n            const key: string = Object.keys(item)[0];\n            return (\n              <div className=\"flex dark:text-gray-50 dark:text-opacity-95\" key={index}>\n                <ion-icon name={key} />\n                <p className={`-mt-0.5 ml-1 mr-2 ${!project ? 'px-1 bg-gray-200 text-gray-200 rounded' : ''}`}>{item[key] ?? '_'}</p>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectCard;\n","import { useState, useEffect, useCallback } from 'react';\nimport IconButton from '../IconButton/IconButton';\nimport { pinnedProjects, strings, urls } from '../../res';\nimport { Project } from '../../types';\nimport Card from '../Card/Card';\nimport ProjectCard from './ProjectCard/ProjectCard';\nimport { useMediaQuery } from 'react-responsive';\n\ntype ProjectsProps = {\n  projects: Project[] | undefined;\n};\n\nfunction Projects(props: ProjectsProps) {\n\n  const [filteredProjects, setFilteredProjects] = useState<Project[]>([]);\n  const [visibleProject, setVisibleProject] = useState(0);\n  const [languageColors, setLanguageColors] = useState<any>(undefined);\n\n  const isLarge = useMediaQuery({query: '(min-width: 1024px)'});\n\n  // The max amount of cards that will be shown in widescreen at a time.\n  const maxProjectsWhenLarge = 4;\n\n  const getProjectParent = useCallback((project: Project) => {\n    if(project && project.fork && !project.parent) {\n      fetch(`${urls.repoPrefix}${project.name}`)\n        .then(response => response.json())\n        .then((data: Project) => setFilteredProjects(\n          filteredProjects.map(p => \n            p.id === project.id\n            ? {...p, parent: data.parent, language: data.parent?.language}\n            : p\n          )\n        )); \n    }\n  }, [filteredProjects]);\n\n  useEffect(() => {\n    if (props.projects && filteredProjects.length <= 0) {\n      setFilteredProjects(props.projects.filter(p => pinnedProjects.includes(p.name)));\n    }\n    if (filteredProjects.length > 0) {\n      getProjectParent(filteredProjects[0]);\n    }\n    if (!languageColors) {\n      // Regularly scrapes github language definition YML\n      fetch(urls.colors)\n        .then(response => response.json())\n        .then(data => setLanguageColors(data));\n    }\n  }, [props.projects, filteredProjects.length, languageColors, filteredProjects, getProjectParent]);\n\n  const switchProjects = (projectIndex: number) => {\n    // Make changes only if the target index is in range\n    if (projectIndex >= 0 && projectIndex <= filteredProjects.length - 1) {\n      setVisibleProject(projectIndex);\n      getProjectParent(filteredProjects[projectIndex]);\n    }\n  };\n\n  const getLanguageColor = (project: Project) => {\n    if (!languageColors || !project || !project.language) {\n      return \"000000ff\";\n    }\n    return languageColors[project.language].color;\n  };\n\n  return (\n   <Card \n   title={strings.projectsTitle}\n   icon={`cloud${window.matchMedia('(prefers-color-scheme: dark)')?.matches ? '' : '-outline'}`}\n   large>\n      {filteredProjects.length > 0\n        ? <div className=\"flex justify-between\">\n          <div className=\"pt-28\">\n            {!isLarge || filteredProjects.length < maxProjectsWhenLarge \n              ? <IconButton name=\"chevron-back-circle-outline\" onClick={() => switchProjects(visibleProject - 1)} disabled={visibleProject === 0} />\n              : <div />\n            }\n          </div>\n          {isLarge\n            ? filteredProjects.map((project, index) => {\n                return (\n                  (index < maxProjectsWhenLarge)\n                    ? <ProjectCard key={index} project={project} languageColor={getLanguageColor(project)} />\n                    : <div />\n                )\n              })\n            : <ProjectCard project={filteredProjects[visibleProject]} languageColor={getLanguageColor(filteredProjects[visibleProject])} />\n          }\n          <div className=\"pt-28\">\n            {!isLarge || filteredProjects.length < maxProjectsWhenLarge\n              ? <IconButton name=\"chevron-forward-circle-outline\" onClick={() => switchProjects(visibleProject + 1)} disabled={visibleProject === filteredProjects.length - 1} />\n              : <div />}\n          </div>\n        </div>\n        : <div className=\"flex justify-center\">\n          <ProjectCard project={undefined} languageColor=\"000000ff\" />\n        </div>\n      }\n   </Card>\n  );\n}\n\nexport default Projects;\n","import { strings, currentSkills } from '../../res';\nimport ListCard from '../ListCard/ListCard';\n\nfunction Skills() {\n return (\n  <div>\n    <ListCard title={strings.skillsTitle} icon=\"flask-outline\" list={currentSkills} />\n  </div>\n );\n}\n\nexport default Skills;\n","import { strings } from '../../res';\n\nfunction Footer() {\n  return (\n    <div className=\"flex pt-1 justify-center bg-green-500 dark:bg-gray-800 text-sm lg:text-normal text-center text-gray-50 text-opacity-90 lg:absolute lg:bottom-0 lg:w-screen\">\n      <p>{strings.footer}</p>\n      <p className=\"mx-4\">&bull;</p>\n      <a href=\"https://github.com/scottblechman/scottblechman.dev\">\n        <div className=\"flex\">\n          <div className=\"mt-0 5\">\n            <ion-icon name=\"logo-github\" size=\"small\" />\n          </div>\n          <p className=\"ml-1\">View on GitHub</p>\n        </div>\n      </a>\n    </div>\n  );\n}\n\nexport default Footer;","import { useState, useEffect } from 'react';\nimport { Header, Bio, Projects, Skills, Footer } from './components';\nimport { urls } from './res';\nimport { User, Project } from './types';\n\nfunction App() {\n\n  const [profile, setProfile] = useState<User | undefined>(undefined);\n  const [repos, setRepos] = useState<Project[] | undefined>(undefined);\n\n  useEffect(() => {\n    fetch(urls.profile)\n      .then(response => response.json())\n      .then(data => setProfile(data))\n      .catch(err => console.error(err));\n    fetch(urls.repos)\n      .then(response => response.json())\n      .then(data => setRepos(data.filter((p: Project) => !p.private)))\n      .catch(err => console.error(err));\n  }, []);\n\n  return (\n    <div className=\"relative h-screen\">\n      <header className=\"mb-72 lg:mb-48\">\n        <Header avatar={profile?.avatar_url} />\n      </header>\n      <section className=\"mx-4 lg:mx-96 -mt-14 grid grid-cols-1 lg:grid-cols-3\">\n        <Bio />\n        <Projects projects={repos} />\n        <Skills />\n      </section>\n      <footer>\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Define Ionicon element\ninterface IonIconProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement> {\n  name: string,\n  size?: string,\n};\n\ndeclare global {\n  namespace JSX {\n      interface IntrinsicElements {\n        'ion-icon': IonIconProps;\n      }\n  }\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}